(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[5],{

/***/ "./src/chapters/chapter3/Chapter3.js":
/*!*******************************************!*\
  !*** ./src/chapters/chapter3/Chapter3.js ***!
  \*******************************************/
/*! exports provided: show, destroy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"show\", function() { return show; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"destroy\", function() { return destroy; });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls.js */ \"./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n// manipulate box using keyboard\n\n\n\n\nconst MAX_SPEED = 0.15;\n\nlet funcKeyDown;\nlet funcKeyUp;\n\nclass Chapter2 {\n    constructor() {\n        this.camera;\n        this.scene;\n        this.renderer;\n        this.mesh;\n\n        this.speed = 0;\n        this.direction = 0;\n        this.forward = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, 0, -1);\n\n        this.init();\n    }\n\n    init() {\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_0__[\"BoxGeometry\"](0.1, 0.1, 0.2);\n        const material = new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshLambertMaterial\"]( { color: 0xff0000 } );\n\n        this.mesh = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"]( geometry, material );\n        this.mesh.position.x = 1.9;\n        this.mesh.position.z = -0.4;\n        this.mesh.rotation.y = 17.8;\n\n        this.scene = new three__WEBPACK_IMPORTED_MODULE_0__[\"Scene\"]();\n        this.scene.background = new three__WEBPACK_IMPORTED_MODULE_0__[\"Color\"](0x999999);\n        this.scene.add(this.mesh);\n\n        this.addPlane();\n        this.addLights();\n\n        this.renderer = new three__WEBPACK_IMPORTED_MODULE_0__[\"WebGLRenderer\"]({ antialias: true });\n    }\n\n    addPlane() {\n        const loader = new three__WEBPACK_IMPORTED_MODULE_0__[\"TextureLoader\"]();\n        const texture = loader.load('https://thumbs.dreamstime.com/z/white-laminate-parquet-background-wooden-texture-city-map-race-circuit-road-silhouette-wooden-race-track-circle-157012894.jpg');\n        texture.wrapS = texture.wrapT = three__WEBPACK_IMPORTED_MODULE_0__[\"RepeatWrapping\"]; \n        texture.repeat.set(1, 1);\n        const material = new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({\n          map: texture, side: three__WEBPACK_IMPORTED_MODULE_0__[\"DoubleSide\"]\n        });\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_0__[\"PlaneGeometry\"](10, 10, 1, 1);\n        const plane = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](geometry, material);\n        plane.position.y = -0.05;\n        plane.rotation.x = Math.PI / 2;\n        \n        this.scene.add(plane);\n      }\n\n    addEventListeners() {\n        funcKeyDown = this.keyDown.bind(this);\n        funcKeyUp = this.keyUp.bind(this);\n        document.addEventListener('keydown', funcKeyDown);\n        document.addEventListener('keyup', funcKeyUp);\n    }\n\n    keyUp(e) {\n        if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n            this.speed = 0;\n        }\n\n        if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n            this.direction = 0;\n        }\n    }\n\n    keyDown(e) {\n        if (e.key === 'ArrowUp') {\n            this.speed = MAX_SPEED;\n        }\n\n        if (e.key === 'ArrowDown') {\n            this.speed = -MAX_SPEED / 3;\n        }\n\n        if (e.key === 'ArrowLeft') {\n            this.direction = 1;\n        }\n\n        if (e.key === 'ArrowRight') {\n            this.direction = -1;\n        }\n    }\n\n    addLights() {\n        // HemisphereLight\n        const skyColor = 0xeeeeee; // light blue\n        const groundColor = 0xcccccc; // brownish orange\n        const intensity = 1;\n        const hemisphereLight = new three__WEBPACK_IMPORTED_MODULE_0__[\"HemisphereLight\"](\n            skyColor,\n            groundColor,\n            intensity\n        );\n\n        this.scene.add(hemisphereLight);\n    }\n\n    animation(time) {\n        this.controls.update();\n\n        const deltaTime = Math.min(Date.now()* 0.00001 - 0, 1 / 50);\n        if (this.speed !== 0) {\n            const value = this.direction * deltaTime;\n            this.mesh.rotation.y += this.speed > 0 ? value : -value;\n        }\n\n        this.mesh.translateOnAxis(this.forward, this.speed * Math.min(Date.now()* 0.001 - 0, 1 / 20));\n\n        const relativeCameraOffset = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, 0.6, 0.8);\n        const cameraOffset = relativeCameraOffset.applyMatrix4(this.mesh.matrixWorld);\n        this.camera.position.x = cameraOffset.x;\n        this.camera.position.y = cameraOffset.y;\n        this.camera.position.z = cameraOffset.z;\n        this.camera.lookAt(this.mesh.position);\n        this.renderer.render(this.scene, this.camera);\n    }\n\n    removeEventListeners() {\n        console.log('removeEventListeners', this);\n        document.addEventListener('keydown', funcKeyDown);\n        document.addEventListener('keyup', funcKeyUp);\n    }\n\n    show(element) {\n        this.addEventListeners();\n        const width = element.clientWidth - 10;\n        const height = element.clientHeight - 10;\n\n        this.camera = new three__WEBPACK_IMPORTED_MODULE_0__[\"PerspectiveCamera\"]( 70, width / height, 0.01, 10);\n        this.camera.position.z = 1;\n        this.camera.position.y = 1.5;\n\n        this.controls = new three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_1__[\"OrbitControls\"]( this.camera, this.renderer.domElement );\n\n        this.renderer.setSize(width, height);\n        this.renderer.setAnimationLoop(this.animation.bind(this));\n\n        element.appendChild(this.renderer.domElement);\n    }\n}\n\nconst chapter2 = new Chapter2();\n\nfunction show(ele) {\n    chapter2.show(ele);\n}\n\nfunction destroy() {\n    chapter2.renderer.setAnimationLoop(null);\n    chapter2.removeEventListeners();\n}\n\n\n\n//# sourceURL=webpack:///./src/chapters/chapter3/Chapter3.js?");

/***/ })

}]);